July 1:

    Df to list: df.values.tolist()
    Read excel: df = pd.read_excel('book2.xlsx')
    Add pandas data to an existing csv file - df.to_csv('my_csv.csv', mode='a', header=False)
    Name to index column:  df.index.name
    csv data to 2d list: data = list(csv.reader(open(datafile)))

---------------------------------------------------------------------------------------------------------------------------------------

Naming convention:
    For variables and functions, use lowercase with underscores (snake_case). 
    For classes, use CamelCase.

String formatting:
    msg: str = 'Something'
    print(f'{msg:*>20}') # O/P: ***********Something (totally 20 chars, something = 9, 11 * before something)
    print(f'{msg:*<20}') # O/P: Something***********

Class:
    Class instantiation uses function notation - x = MyClass()
    constructor : def __init__():{}

What is SELF in Python? 
    SELF represents the instance of class. 
    This handy keyword allows you to access variables, attributes, and methods of a defined class in Python

Types of variable:
    Class variable - like static variable 
        - defined in class, outside methods 
        - common to all objects
        - Changes made to the class variable affect all instances
    Instance variable 
        - defined in constructor 
        - diff for each object 
        - Changes made to the instance variable does not affect all instances 
    Once we make changes to class variable inside a method like setting a value - it becomes an instance variable 

Using Super() in multiple inheritance:
    - overwrites all the values 

File read():
    The read() method returns the specified number of bytes from the file. Default is -1 which means the whole file.

csv.writer():
    Returns a writer object responsible for converting the userâ€™s data into delimited strings on the given file-like object
    Delimited - seperated by commas 

Sort dict: 
    x = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
    {k: v for k, v in sorted(x.items(), key=lambda item: item[1])}
    --> returns a sorted dict --> k:v